
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.ObjectInputStream;
import java.text.DecimalFormat;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author marlonvanbesien
 */
public class MCExamen {
    private String naamVak;
    private ArrayList<MCVraag> vragen;
    private boolean hogereCesuur;

    public MCExamen(String naamVak, File file, boolean hogereCesuur) {
        this.naamVak = naamVak;
        this.hogereCesuur = hogereCesuur;
        this.vragen = new ArrayList<>(0);
        this.leesVragen(file);
        System.out.println(this.vragen.size()+" MC vragen ingeladen!");
        this.vragen.trimToSize();
    }

    public String getNaamVak() {
        return naamVak;
    }

    public ArrayList<MCVraag> getVragen() {
        return vragen;
    }

    public boolean isHogereCesuur() {
        return hogereCesuur;
    }

    public int getAantalVragen() {
        return vragen.size();
    }
    public int getAantalAntwoordenVanVraag(int vraag){
         return vragen.get(vraag).getAantalAntwoorden();
        
    }
    public void leesVragen(File file) { 
        try {
            ObjectInputStream inputStream = null; 
            FileInputStream x =  new FileInputStream(file);
            inputStream = new ObjectInputStream(x);
            vragen.addAll((ArrayList<MCVraag>) inputStream.readObject());
        } catch (FileNotFoundException ex) {
            System.out.println("Het bestand '"+ file.getName() + "' kan niet gevonden worden!");
        } catch (Exception ex) {
            System.out.println("Er is een probleem bij het inlezen van het bestand '"+ file.getName() + "'!");
        } 
    }
    
    public double bepaalScoreZonderCesuur(int correct){
        double aantalVragen = (double) this.getAantalVragen();
        double score = 20*(correct/aantalVragen);
        score = Double.parseDouble((new DecimalFormat("##.##").format(score)));
        return score;
    }
    
    public double bepaalHogereCesuur(){ 
        double cesuur=0.0;
        for (MCVraag vr: vragen){
           double keuzes=  vr.getAantalAntwoorden();
           cesuur += (keuzes+1)/(2*keuzes);
        }
        return cesuur;
    }
    public double bepaalScoreMetCesuur(int correct){
        double x = this.bepaalHogereCesuur();
        double y = (double) this.getAantalVragen();
        double scoreMetCesuur = 10 +(10/(y-x))*(correct-x);
        scoreMetCesuur = Double.parseDouble(new DecimalFormat("##.##").format(scoreMetCesuur));
        if(scoreMetCesuur<0)
            return 0;
        else
            return scoreMetCesuur;
    }

}
