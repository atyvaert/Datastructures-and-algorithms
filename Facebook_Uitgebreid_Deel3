
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
public class Facebook {
private HashMap<String, Account> accounts;

public Facebook() {
accounts = new HashMap<>();
}
public Facebook(String bestandsnaam) throws FileNotFoundException, FacebookException{
try {
Scanner inputStream = new Scanner(new File(bestandsnaam));
accounts = new HashMap<>();
while (inputStream.hasNextLine()) {
String line = inputStream.nextLine();
String[] gegevens = line.split(";");
for (int i = 0; i < gegevens.length; i++) {
String firstName, lastName, gender, email, login, password;
firstName = gegevens[i];
lastName = gegevens[i + 1];
gender = gegevens[i + 2];
email = gegevens[i +3];
login = gegevens[i + 4];
password = gegevens[i + 5];
i= i+5;
this.addAccount(firstName, lastName, gender, email, login, password);
}}}
catch (Exception ex) {
if (ex instanceof FileNotFoundException) {
throw new FileNotFoundException(bestandsnaam);
} else {
throw new FacebookException(new File(bestandsnaam));
}}}

public HashMap<String, Account> getAccounts() {
return accounts;}

public void addAccount(String firstName, String lastName, String gender, String email, String
login, String password) throws FacebookException {
Account pedro = new Account(firstName, lastName, gender, email, login, password);
if (accounts.containsKey(pedro.getLogin())) {
throw new FacebookException(pedro);
} else {
accounts.put(login, pedro);
}}
public void addFriendship(Account vriend1, String vriend2) throws FacebookException {
if (accounts.containsKey(vriend2) && accounts.containsValue(vriend1)) {
HashSet<Account> vrienden1 = vriend1.getFriends();
HashSet<Account> vrienden2 = accounts.get(vriend2).getFriends();
vrienden1.add(accounts.get(vriend2));
vrienden2.add(vriend1);
} else {
if (!accounts.containsKey(vriend2)) {
throw new FacebookException(vriend2);
}
if (!accounts.containsValue(vriend1)) {
throw new FacebookException(vriend1.getLogin());
}
}}
public boolean removeFriendship(String haat1, String login) throws FacebookException{
if (accounts.containsKey(haat1) && accounts.containsKey(login)) {
HashSet<Account> vrienden1 = accounts.get(login).getFriends();
HashSet<Account> vrienden2 = accounts.get(haat1).getFriends();
return vrienden1.remove(accounts.get(haat1)) & vrienden2.remove(accounts.get(login));
} else {
if (!accounts.containsKey(haat1)) {
throw new FacebookException(haat1);
}
if (!accounts.containsKey(login)) {
throw new FacebookException(login);
}}
return false;
}
public void addPost(String loginOfWallToPost, String postText, Account postCreator) throws
FacebookException {
HashSet<Account> lijst = new HashSet<>();
if (accounts.containsKey(loginOfWallToPost) && accounts.containsValue(postCreator)) {
lijst.add(accounts.get(loginOfWallToPost));
lijst.addAll(accounts.get(loginOfWallToPost).getFriends());
if (lijst.contains(postCreator)) {
Post nieuw = new Post(postCreator, postText);
accounts.get(loginOfWallToPost).getWall().add(nieuw);
} else {
Post nieuw = new Post(postCreator, postText);
throw new FacebookException(nieuw);
}
} else {
if (!accounts.containsKey(loginOfWallToPost)) {
throw new FacebookException(loginOfWallToPost);
}
if (!accounts.containsValue(postCreator)) {
throw new FacebookException(postCreator.getLogin());
}
}
}
public Post search(Integer ID) {
for (Account cool : accounts.values()) {
Account vriend = cool;
HashSet<Post> wall =vriend.getWall();
for (Post muur : wall) {
Post feed = muur;
vriend.getWall();
if (feed.getPostID().equals(ID)) {
return feed;
}
}
}
return null;
}
public void like(String vriend, Post post) throws FacebookException {
if (accounts.containsKey(vriend) && !(this.search(post.getPostID()) == null)) {
HashSet<Integer> likes = accounts.get(vriend).getLikes();
likes.add(post.getPostID());
} else {
if (!accounts.containsKey(vriend)) {
throw new FacebookException(vriend);
}
if ((this.search(post.getPostID()) == null)) {
throw new FacebookException(post.getPostID());
}
}
}
public boolean removeLike(String login, Integer postID) throws FacebookException {
if (accounts.containsKey(login) && !(this.search(postID) == null)) {
HashSet<Integer> likes = accounts.get(login).getLikes();
return likes.remove(postID);
} else {
if (!accounts.containsKey(login)) {
throw new FacebookException(login);
}
if ((this.search(postID) == null)) {
throw new FacebookException(postID);
}
return false;
}
}
public ArrayList<Post> getNewsFeed(Account login) throws FacebookException {
ArrayList<Post> feed = new ArrayList<>();
int count = 0;
for (Account vriend : accounts.values()) {
if (vriend.equals(login)) {
count++;
HashSet<Post> muur = vriend.getWall();
for (Post demuur : muur) {
feed.add(demuur);
}
HashSet<Account> vrienden = vriend.getFriends();
for (Account maatje : vrienden) {
Account maat = maatje;
for (Post cool : maat.getWall()) {
feed.add(cool);
}
}
Collections.sort(feed);
}
}
if (!(count == 1)) {
throw new FacebookException(login.getLogin());
}
return feed;
}
public void exportAccountsDataFile(String filename) throws IOException {
ObjectOutputStream outputStream = new ObjectOutputStream(new
FileOutputStream(filename));
outputStream.writeObject(accounts);
}
public boolean importAccountsDataFile(String filename) {
try {
ObjectInputStream inputStream = new ObjectInputStream(new
FileInputStream(filename));
accounts.putAll((HashMap<String, Account>) inputStream.readObject());
} catch (IOException | ClassNotFoundException e) {
if (e instanceof FileNotFoundException) {
System.out.println("Het bestand "+ "\'" + filename + "\'" + " bestaat niet!");
return false;
}
else {
    System.out.println("Het bestand "+ "\'" + filename + "\'" + " kan niet ingelezen worden!");
return false;
}
}
return true;
}

public static void main (String args[]){
    Facebook k =new Facebook();
 k.importAccountsDataFile("hey");
}
}
